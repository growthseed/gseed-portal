# ====================================================================
# üöÄ DEPLOY DAS CORRE√á√ïES - GSEED PORTAL
# ====================================================================
# Executa deploy da Edge Function com corre√ß√µes CORS e testa localmente
# ====================================================================

Write-Host ""
Write-Host "========================================" -ForegroundColor Cyan
Write-Host "üöÄ DEPLOY DAS CORRE√á√ïES CORS + AUTH" -ForegroundColor Cyan
Write-Host "========================================" -ForegroundColor Cyan
Write-Host ""

# Verificar se Supabase CLI est√° instalado
Write-Host "üîç Verificando Supabase CLI..." -ForegroundColor Yellow
$supabaseVersion = supabase --version 2>&1
if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå Supabase CLI n√£o encontrado!" -ForegroundColor Red
    Write-Host ""
    Write-Host "üì¶ Instale com:" -ForegroundColor Yellow
    Write-Host "   npm install -g supabase" -ForegroundColor White
    Write-Host ""
    exit 1
}
Write-Host "‚úÖ Supabase CLI instalado: $supabaseVersion" -ForegroundColor Green
Write-Host ""

# Verificar se est√° logado
Write-Host "üîê Verificando autentica√ß√£o..." -ForegroundColor Yellow
$authCheck = supabase projects list 2>&1
if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå N√£o autenticado no Supabase!" -ForegroundColor Red
    Write-Host ""
    Write-Host "üîë Fa√ßa login com:" -ForegroundColor Yellow
    Write-Host "   supabase login" -ForegroundColor White
    Write-Host ""
    exit 1
}
Write-Host "‚úÖ Autenticado no Supabase" -ForegroundColor Green
Write-Host ""

# Deploy da Edge Function
Write-Host "üì¶ Fazendo deploy da fun√ß√£o 'brevo-proxy'..." -ForegroundColor Yellow
Write-Host ""

$deployOutput = supabase functions deploy brevo-proxy --no-verify-jwt 2>&1
if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå Erro no deploy!" -ForegroundColor Red
    Write-Host $deployOutput
    Write-Host ""
    exit 1
}

Write-Host "‚úÖ Deploy realizado com sucesso!" -ForegroundColor Green
Write-Host ""
Write-Host $deployOutput
Write-Host ""

# Resumo das corre√ß√µes
Write-Host "========================================" -ForegroundColor Cyan
Write-Host "‚ú® CORRE√á√ïES APLICADAS" -ForegroundColor Cyan
Write-Host "========================================" -ForegroundColor Cyan
Write-Host ""
Write-Host "1. ‚úÖ CORS configur√°vel (env ALLOWED_ORIGIN)" -ForegroundColor Green
Write-Host "2. ‚úÖ Preflight OPTIONS retorna 204 (padr√£o)" -ForegroundColor Green
Write-Host "3. ‚úÖ Headers CORS completos com Max-Age" -ForegroundColor Green
Write-Host "4. ‚úÖ brevoService verifica response.ok" -ForegroundColor Green
Write-Host "5. ‚úÖ SignUp usa signUpWithWelcomeEmail" -ForegroundColor Green
Write-Host "6. ‚úÖ ProfessionalSignupForm usa getSession()" -ForegroundColor Green
Write-Host ""

# Instru√ß√µes de teste
Write-Host "========================================" -ForegroundColor Cyan
Write-Host "üß™ COMO TESTAR" -ForegroundColor Cyan
Write-Host "========================================" -ForegroundColor Cyan
Write-Host ""
Write-Host "1. Inicie o servidor local:" -ForegroundColor Yellow
Write-Host "   npm run dev" -ForegroundColor White
Write-Host ""
Write-Host "2. Abra o DevTools (F12) > Console + Network" -ForegroundColor Yellow
Write-Host ""
Write-Host "3. Fa√ßa um cadastro completo:" -ForegroundColor Yellow
Write-Host "   - V√° em /cadastro" -ForegroundColor White
Write-Host "   - Escolha tipo (profissional/contratante)" -ForegroundColor White
Write-Host "   - Preencha formul√°rio e finalize" -ForegroundColor White
Write-Host ""
Write-Host "4. Verifique no Console:" -ForegroundColor Yellow
Write-Host "   ‚úÖ '[Brevo] Chamando a√ß√£o: sendEmail'" -ForegroundColor Green
Write-Host "   ‚úÖ '[Brevo] Status: 200 OK'" -ForegroundColor Green
Write-Host "   ‚úÖ '[Brevo] Sucesso em sendEmail'" -ForegroundColor Green
Write-Host ""
Write-Host "5. Verifique no Network:" -ForegroundColor Yellow
Write-Host "   ‚úÖ Requisi√ß√£o OPTIONS retorna 204" -ForegroundColor Green
Write-Host "   ‚úÖ Requisi√ß√£o POST retorna 200" -ForegroundColor Green
Write-Host "   ‚úÖ Sem erros CORS (vermelho)" -ForegroundColor Green
Write-Host ""

# Checklist
Write-Host "========================================" -ForegroundColor Cyan
Write-Host "‚úÖ CHECKLIST DE ACEITA√á√ÉO" -ForegroundColor Cyan
Write-Host "========================================" -ForegroundColor Cyan
Write-Host ""
Write-Host "‚òê OPTIONS retorna 204 com headers CORS" -ForegroundColor White
Write-Host "‚òê POST para brevo-proxy retorna 200" -ForegroundColor White
Write-Host "‚òê Sem erros CORS no DevTools Console" -ForegroundColor White
Write-Host "‚òê Ap√≥s signup, sess√£o existe (getSession)" -ForegroundColor White
Write-Host "‚òê Perfil criado com sucesso" -ForegroundColor White
Write-Host "‚òê Emails enviados via Brevo (verificar logs)" -ForegroundColor White
Write-Host ""

# Pr√≥ximos passos
Write-Host "========================================" -ForegroundColor Cyan
Write-Host "üìã PR√ìXIMOS PASSOS" -ForegroundColor Cyan
Write-Host "========================================" -ForegroundColor Cyan
Write-Host ""
Write-Host "1. Configure ALLOWED_ORIGIN em produ√ß√£o:" -ForegroundColor Yellow
Write-Host "   supabase secrets set ALLOWED_ORIGIN=https://seudominio.com" -ForegroundColor White
Write-Host ""
Write-Host "2. Teste em produ√ß√£o (ap√≥s deploy Vercel)" -ForegroundColor Yellow
Write-Host ""
Write-Host "3. Monitore logs da fun√ß√£o:" -ForegroundColor Yellow
Write-Host "   supabase functions logs brevo-proxy" -ForegroundColor White
Write-Host ""

Write-Host "========================================" -ForegroundColor Cyan
Write-Host "üéâ DEPLOY CONCLU√çDO!" -ForegroundColor Green
Write-Host "========================================" -ForegroundColor Cyan
Write-Host ""
